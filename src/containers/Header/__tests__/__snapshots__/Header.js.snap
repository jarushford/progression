// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Header Component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    clearAscents={[MockFunction]}
    clearProjects={[MockFunction]}
    clearWorkouts={[MockFunction]}
    currentUser={
      Object {
        "email": "thechosenone@hobbiton.org",
        "name": "Frodo",
        "password": "Sam",
      }
    }
    logoutUser={[MockFunction]}
    toggleMenu={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <div
            className="current-user"
          >
            <div>
              <h2>
                <i
                  className="fas fa-caret-down"
                />
                 Welcome, 
                Frodo
                !
              </h2>
              <Link
                className="logout-link"
                onClick={[Function]}
                replace={false}
                to="/"
              >
                <h2>
                  Log Out
                </h2>
              </Link>
            </div>
            <i
              className="fas fa-user-circle"
            />
          </div>
          <div
            className="drop-down"
          >
            <input
              id="burger-check"
              onChange={[MockFunction]}
              type="checkbox"
            />
            <label
              className="burger"
              htmlFor="burger-check"
            >
              <div
                className="burgerbar b1"
              />
              <div
                className="burgerbar b2"
              />
              <div
                className="burgerbar b3"
              />
            </label>
            <div
              className="drop-box"
            >
              <Link
                className="nav-item drop-nav"
                onClick={[MockFunction]}
                replace={false}
                to="/training"
              >
                 TRAINING 
              </Link>
              <Link
                className="nav-item drop-nav"
                onClick={[MockFunction]}
                replace={false}
                to="/projects"
              >
                 PROJECTS 
              </Link>
              <Link
                className="nav-item drop-nav"
                onClick={[MockFunction]}
                replace={false}
                to="/ascents"
              >
                 ASCENTS 
              </Link>
              <Link
                className="logout-link drop-logout"
                onClick={[Function]}
                replace={false}
                to="/"
              >
                <h2>
                  Log Out
                </h2>
              </Link>
            </div>
          </div>
        </div>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          to="/"
        >
          <div
            className="logo"
          />
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item wide-nav"
          onClick={[Function]}
          to="/training"
        >
          TRAINING
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item wide-nav"
          onClick={[Function]}
          to="/projects"
        >
          PROJECTS
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item wide-nav"
          onClick={[Function]}
          to="/ascents"
        >
          ASCENTS
        </NavLink>,
      ],
      "className": "header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="current-user"
            >
              <div>
                <h2>
                  <i
                    className="fas fa-caret-down"
                  />
                   Welcome, 
                  Frodo
                  !
                </h2>
                <Link
                  className="logout-link"
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  <h2>
                    Log Out
                  </h2>
                </Link>
              </div>
              <i
                className="fas fa-user-circle"
              />
            </div>,
            <div
              className="drop-down"
            >
              <input
                id="burger-check"
                onChange={[MockFunction]}
                type="checkbox"
              />
              <label
                className="burger"
                htmlFor="burger-check"
              >
                <div
                  className="burgerbar b1"
                />
                <div
                  className="burgerbar b2"
                />
                <div
                  className="burgerbar b3"
                />
              </label>
              <div
                className="drop-box"
              >
                <Link
                  className="nav-item drop-nav"
                  onClick={[MockFunction]}
                  replace={false}
                  to="/training"
                >
                   TRAINING 
                </Link>
                <Link
                  className="nav-item drop-nav"
                  onClick={[MockFunction]}
                  replace={false}
                  to="/projects"
                >
                   PROJECTS 
                </Link>
                <Link
                  className="nav-item drop-nav"
                  onClick={[MockFunction]}
                  replace={false}
                  to="/ascents"
                >
                   ASCENTS 
                </Link>
                <Link
                  className="logout-link drop-logout"
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  <h2>
                    Log Out
                  </h2>
                </Link>
              </div>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div>
                  <h2>
                    <i
                      className="fas fa-caret-down"
                    />
                     Welcome, 
                    Frodo
                    !
                  </h2>
                  <Link
                    className="logout-link"
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    <h2>
                      Log Out
                    </h2>
                  </Link>
                </div>,
                <i
                  className="fas fa-user-circle"
                />,
              ],
              "className": "current-user",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2>
                      <i
                        className="fas fa-caret-down"
                      />
                       Welcome, 
                      Frodo
                      !
                    </h2>,
                    <Link
                      className="logout-link"
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      <h2>
                        Log Out
                      </h2>
                    </Link>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <i
                          className="fas fa-caret-down"
                        />,
                        " Welcome, ",
                        "Frodo",
                        "!",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "className": "fas fa-caret-down",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "i",
                      },
                      " Welcome, ",
                      "Frodo",
                      "!",
                    ],
                    "type": "h2",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <h2>
                        Log Out
                      </h2>,
                      "className": "logout-link",
                      "onClick": [Function],
                      "replace": false,
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Log Out",
                      },
                      "ref": null,
                      "rendered": "Log Out",
                      "type": "h2",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fas fa-user-circle",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  id="burger-check"
                  onChange={[MockFunction]}
                  type="checkbox"
                />,
                <label
                  className="burger"
                  htmlFor="burger-check"
                >
                  <div
                    className="burgerbar b1"
                  />
                  <div
                    className="burgerbar b2"
                  />
                  <div
                    className="burgerbar b3"
                  />
                </label>,
                <div
                  className="drop-box"
                >
                  <Link
                    className="nav-item drop-nav"
                    onClick={[MockFunction]}
                    replace={false}
                    to="/training"
                  >
                     TRAINING 
                  </Link>
                  <Link
                    className="nav-item drop-nav"
                    onClick={[MockFunction]}
                    replace={false}
                    to="/projects"
                  >
                     PROJECTS 
                  </Link>
                  <Link
                    className="nav-item drop-nav"
                    onClick={[MockFunction]}
                    replace={false}
                    to="/ascents"
                  >
                     ASCENTS 
                  </Link>
                  <Link
                    className="logout-link drop-logout"
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    <h2>
                      Log Out
                    </h2>
                  </Link>
                </div>,
              ],
              "className": "drop-down",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "checked": undefined,
                  "id": "burger-check",
                  "onChange": [MockFunction],
                  "type": "checkbox",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="burgerbar b1"
                    />,
                    <div
                      className="burgerbar b2"
                    />,
                    <div
                      className="burgerbar b3"
                    />,
                  ],
                  "className": "burger",
                  "htmlFor": "burger-check",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "burgerbar b1",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "burgerbar b2",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "burgerbar b3",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                ],
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Link
                      className="nav-item drop-nav"
                      onClick={[MockFunction]}
                      replace={false}
                      to="/training"
                    >
                       TRAINING 
                    </Link>,
                    <Link
                      className="nav-item drop-nav"
                      onClick={[MockFunction]}
                      replace={false}
                      to="/projects"
                    >
                       PROJECTS 
                    </Link>,
                    <Link
                      className="nav-item drop-nav"
                      onClick={[MockFunction]}
                      replace={false}
                      to="/ascents"
                    >
                       ASCENTS 
                    </Link>,
                    <Link
                      className="logout-link drop-logout"
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      <h2>
                        Log Out
                      </h2>
                    </Link>,
                  ],
                  "className": "drop-box",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": " TRAINING ",
                      "className": "nav-item drop-nav",
                      "onClick": [MockFunction],
                      "replace": false,
                      "to": "/training",
                    },
                    "ref": null,
                    "rendered": " TRAINING ",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": " PROJECTS ",
                      "className": "nav-item drop-nav",
                      "onClick": [MockFunction],
                      "replace": false,
                      "to": "/projects",
                    },
                    "ref": null,
                    "rendered": " PROJECTS ",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": " ASCENTS ",
                      "className": "nav-item drop-nav",
                      "onClick": [MockFunction],
                      "replace": false,
                      "to": "/ascents",
                    },
                    "ref": null,
                    "rendered": " ASCENTS ",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <h2>
                        Log Out
                      </h2>,
                      "className": "logout-link drop-logout",
                      "onClick": [Function],
                      "replace": false,
                      "to": "/",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Log Out",
                      },
                      "ref": null,
                      "rendered": "Log Out",
                      "type": "h2",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": <div
            className="logo"
          />,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "logo",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": "TRAINING",
          "className": "nav-item wide-nav",
          "onClick": [Function],
          "to": "/training",
        },
        "ref": null,
        "rendered": "TRAINING",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": "PROJECTS",
          "className": "nav-item wide-nav",
          "onClick": [Function],
          "to": "/projects",
        },
        "ref": null,
        "rendered": "PROJECTS",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": "ASCENTS",
          "className": "nav-item wide-nav",
          "onClick": [Function],
          "to": "/ascents",
        },
        "ref": null,
        "rendered": "ASCENTS",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <div
              className="current-user"
            >
              <div>
                <h2>
                  <i
                    className="fas fa-caret-down"
                  />
                   Welcome, 
                  Frodo
                  !
                </h2>
                <Link
                  className="logout-link"
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  <h2>
                    Log Out
                  </h2>
                </Link>
              </div>
              <i
                className="fas fa-user-circle"
              />
            </div>
            <div
              className="drop-down"
            >
              <input
                id="burger-check"
                onChange={[MockFunction]}
                type="checkbox"
              />
              <label
                className="burger"
                htmlFor="burger-check"
              >
                <div
                  className="burgerbar b1"
                />
                <div
                  className="burgerbar b2"
                />
                <div
                  className="burgerbar b3"
                />
              </label>
              <div
                className="drop-box"
              >
                <Link
                  className="nav-item drop-nav"
                  onClick={[MockFunction]}
                  replace={false}
                  to="/training"
                >
                   TRAINING 
                </Link>
                <Link
                  className="nav-item drop-nav"
                  onClick={[MockFunction]}
                  replace={false}
                  to="/projects"
                >
                   PROJECTS 
                </Link>
                <Link
                  className="nav-item drop-nav"
                  onClick={[MockFunction]}
                  replace={false}
                  to="/ascents"
                >
                   ASCENTS 
                </Link>
                <Link
                  className="logout-link drop-logout"
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  <h2>
                    Log Out
                  </h2>
                </Link>
              </div>
            </div>
          </div>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            to="/"
          >
            <div
              className="logo"
            />
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item wide-nav"
            onClick={[Function]}
            to="/training"
          >
            TRAINING
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item wide-nav"
            onClick={[Function]}
            to="/projects"
          >
            PROJECTS
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item wide-nav"
            onClick={[Function]}
            to="/ascents"
          >
            ASCENTS
          </NavLink>,
        ],
        "className": "header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="current-user"
              >
                <div>
                  <h2>
                    <i
                      className="fas fa-caret-down"
                    />
                     Welcome, 
                    Frodo
                    !
                  </h2>
                  <Link
                    className="logout-link"
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    <h2>
                      Log Out
                    </h2>
                  </Link>
                </div>
                <i
                  className="fas fa-user-circle"
                />
              </div>,
              <div
                className="drop-down"
              >
                <input
                  id="burger-check"
                  onChange={[MockFunction]}
                  type="checkbox"
                />
                <label
                  className="burger"
                  htmlFor="burger-check"
                >
                  <div
                    className="burgerbar b1"
                  />
                  <div
                    className="burgerbar b2"
                  />
                  <div
                    className="burgerbar b3"
                  />
                </label>
                <div
                  className="drop-box"
                >
                  <Link
                    className="nav-item drop-nav"
                    onClick={[MockFunction]}
                    replace={false}
                    to="/training"
                  >
                     TRAINING 
                  </Link>
                  <Link
                    className="nav-item drop-nav"
                    onClick={[MockFunction]}
                    replace={false}
                    to="/projects"
                  >
                     PROJECTS 
                  </Link>
                  <Link
                    className="nav-item drop-nav"
                    onClick={[MockFunction]}
                    replace={false}
                    to="/ascents"
                  >
                     ASCENTS 
                  </Link>
                  <Link
                    className="logout-link drop-logout"
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    <h2>
                      Log Out
                    </h2>
                  </Link>
                </div>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div>
                    <h2>
                      <i
                        className="fas fa-caret-down"
                      />
                       Welcome, 
                      Frodo
                      !
                    </h2>
                    <Link
                      className="logout-link"
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      <h2>
                        Log Out
                      </h2>
                    </Link>
                  </div>,
                  <i
                    className="fas fa-user-circle"
                  />,
                ],
                "className": "current-user",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2>
                        <i
                          className="fas fa-caret-down"
                        />
                         Welcome, 
                        Frodo
                        !
                      </h2>,
                      <Link
                        className="logout-link"
                        onClick={[Function]}
                        replace={false}
                        to="/"
                      >
                        <h2>
                          Log Out
                        </h2>
                      </Link>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <i
                            className="fas fa-caret-down"
                          />,
                          " Welcome, ",
                          "Frodo",
                          "!",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "className": "fas fa-caret-down",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "i",
                        },
                        " Welcome, ",
                        "Frodo",
                        "!",
                      ],
                      "type": "h2",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <h2>
                          Log Out
                        </h2>,
                        "className": "logout-link",
                        "onClick": [Function],
                        "replace": false,
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Log Out",
                        },
                        "ref": null,
                        "rendered": "Log Out",
                        "type": "h2",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fas fa-user-circle",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    id="burger-check"
                    onChange={[MockFunction]}
                    type="checkbox"
                  />,
                  <label
                    className="burger"
                    htmlFor="burger-check"
                  >
                    <div
                      className="burgerbar b1"
                    />
                    <div
                      className="burgerbar b2"
                    />
                    <div
                      className="burgerbar b3"
                    />
                  </label>,
                  <div
                    className="drop-box"
                  >
                    <Link
                      className="nav-item drop-nav"
                      onClick={[MockFunction]}
                      replace={false}
                      to="/training"
                    >
                       TRAINING 
                    </Link>
                    <Link
                      className="nav-item drop-nav"
                      onClick={[MockFunction]}
                      replace={false}
                      to="/projects"
                    >
                       PROJECTS 
                    </Link>
                    <Link
                      className="nav-item drop-nav"
                      onClick={[MockFunction]}
                      replace={false}
                      to="/ascents"
                    >
                       ASCENTS 
                    </Link>
                    <Link
                      className="logout-link drop-logout"
                      onClick={[Function]}
                      replace={false}
                      to="/"
                    >
                      <h2>
                        Log Out
                      </h2>
                    </Link>
                  </div>,
                ],
                "className": "drop-down",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "checked": undefined,
                    "id": "burger-check",
                    "onChange": [MockFunction],
                    "type": "checkbox",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="burgerbar b1"
                      />,
                      <div
                        className="burgerbar b2"
                      />,
                      <div
                        className="burgerbar b3"
                      />,
                    ],
                    "className": "burger",
                    "htmlFor": "burger-check",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "burgerbar b1",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "burgerbar b2",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "burgerbar b3",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                  ],
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Link
                        className="nav-item drop-nav"
                        onClick={[MockFunction]}
                        replace={false}
                        to="/training"
                      >
                         TRAINING 
                      </Link>,
                      <Link
                        className="nav-item drop-nav"
                        onClick={[MockFunction]}
                        replace={false}
                        to="/projects"
                      >
                         PROJECTS 
                      </Link>,
                      <Link
                        className="nav-item drop-nav"
                        onClick={[MockFunction]}
                        replace={false}
                        to="/ascents"
                      >
                         ASCENTS 
                      </Link>,
                      <Link
                        className="logout-link drop-logout"
                        onClick={[Function]}
                        replace={false}
                        to="/"
                      >
                        <h2>
                          Log Out
                        </h2>
                      </Link>,
                    ],
                    "className": "drop-box",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": " TRAINING ",
                        "className": "nav-item drop-nav",
                        "onClick": [MockFunction],
                        "replace": false,
                        "to": "/training",
                      },
                      "ref": null,
                      "rendered": " TRAINING ",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": " PROJECTS ",
                        "className": "nav-item drop-nav",
                        "onClick": [MockFunction],
                        "replace": false,
                        "to": "/projects",
                      },
                      "ref": null,
                      "rendered": " PROJECTS ",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": " ASCENTS ",
                        "className": "nav-item drop-nav",
                        "onClick": [MockFunction],
                        "replace": false,
                        "to": "/ascents",
                      },
                      "ref": null,
                      "rendered": " ASCENTS ",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <h2>
                          Log Out
                        </h2>,
                        "className": "logout-link drop-logout",
                        "onClick": [Function],
                        "replace": false,
                        "to": "/",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Log Out",
                        },
                        "ref": null,
                        "rendered": "Log Out",
                        "type": "h2",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": <div
              className="logo"
            />,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "logo",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": "TRAINING",
            "className": "nav-item wide-nav",
            "onClick": [Function],
            "to": "/training",
          },
          "ref": null,
          "rendered": "TRAINING",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": "PROJECTS",
            "className": "nav-item wide-nav",
            "onClick": [Function],
            "to": "/projects",
          },
          "ref": null,
          "rendered": "PROJECTS",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": "ASCENTS",
            "className": "nav-item wide-nav",
            "onClick": [Function],
            "to": "/ascents",
          },
          "ref": null,
          "rendered": "ASCENTS",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Header Header Component should match the snapshot with no user 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    clearAscents={[MockFunction]}
    clearProjects={[MockFunction]}
    clearWorkouts={[MockFunction]}
    currentUser={
      Object {
        "email": "",
        "name": "",
        "password": "",
      }
    }
    logoutUser={[MockFunction]}
    toggleMenu={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          replace={false}
          to="/login"
        >
          <button>
            Login / Sign Up
          </button>
        </Link>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          to="/"
        >
          <div
            className="logo"
          />
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item wide-nav"
          onClick={[Function]}
          to="/training"
        >
          TRAINING
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item wide-nav"
          onClick={[Function]}
          to="/projects"
        >
          PROJECTS
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item wide-nav"
          onClick={[Function]}
          to="/ascents"
        >
          ASCENTS
        </NavLink>,
      ],
      "className": "header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button>
            Login / Sign Up
          </button>,
          "replace": false,
          "to": "/login",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Login / Sign Up",
          },
          "ref": null,
          "rendered": "Login / Sign Up",
          "type": "button",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": <div
            className="logo"
          />,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "logo",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": "TRAINING",
          "className": "nav-item wide-nav",
          "onClick": [Function],
          "to": "/training",
        },
        "ref": null,
        "rendered": "TRAINING",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": "PROJECTS",
          "className": "nav-item wide-nav",
          "onClick": [Function],
          "to": "/projects",
        },
        "ref": null,
        "rendered": "PROJECTS",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": "ASCENTS",
          "className": "nav-item wide-nav",
          "onClick": [Function],
          "to": "/ascents",
        },
        "ref": null,
        "rendered": "ASCENTS",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            replace={false}
            to="/login"
          >
            <button>
              Login / Sign Up
            </button>
          </Link>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            to="/"
          >
            <div
              className="logo"
            />
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item wide-nav"
            onClick={[Function]}
            to="/training"
          >
            TRAINING
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item wide-nav"
            onClick={[Function]}
            to="/projects"
          >
            PROJECTS
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item wide-nav"
            onClick={[Function]}
            to="/ascents"
          >
            ASCENTS
          </NavLink>,
        ],
        "className": "header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button>
              Login / Sign Up
            </button>,
            "replace": false,
            "to": "/login",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login / Sign Up",
            },
            "ref": null,
            "rendered": "Login / Sign Up",
            "type": "button",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": <div
              className="logo"
            />,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "logo",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": "TRAINING",
            "className": "nav-item wide-nav",
            "onClick": [Function],
            "to": "/training",
          },
          "ref": null,
          "rendered": "TRAINING",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": "PROJECTS",
            "className": "nav-item wide-nav",
            "onClick": [Function],
            "to": "/projects",
          },
          "ref": null,
          "rendered": "PROJECTS",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": "ASCENTS",
            "className": "nav-item wide-nav",
            "onClick": [Function],
            "to": "/ascents",
          },
          "ref": null,
          "rendered": "ASCENTS",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
