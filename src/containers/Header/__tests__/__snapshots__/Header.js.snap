// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Header Component should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    currentUser={
      Object {
        "email": "thechosenone@hobbiton.org",
        "name": "Frodo",
        "password": "Sam",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <NavLink
          activeClassName="active"
          aria-current="page"
          to="/"
        >
          <div
            className="logo"
          />
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item"
          to="/training"
        >
           TRAINING 
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item"
          to="/projects"
        >
           PROJECTS 
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item"
          to="/ascents"
        >
           ASCENTS 
        </NavLink>,
        <div
          className="current-user"
        >
          <div>
            <h2>
              <i
                className="fas fa-caret-down"
              />
               Welcome, 
              Frodo
              !
            </h2>
            <Link
              className="logout-link"
              onClick={[Function]}
              replace={false}
              to="/"
            >
              <h2>
                Log Out
              </h2>
            </Link>
          </div>
          <i
            className="fas fa-user-circle"
          />
        </div>,
      ],
      "className": "header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": <div
            className="logo"
          />,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "logo",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": " TRAINING ",
          "className": "nav-item",
          "to": "/training",
        },
        "ref": null,
        "rendered": " TRAINING ",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": " PROJECTS ",
          "className": "nav-item",
          "to": "/projects",
        },
        "ref": null,
        "rendered": " PROJECTS ",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": " ASCENTS ",
          "className": "nav-item",
          "to": "/ascents",
        },
        "ref": null,
        "rendered": " ASCENTS ",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <h2>
                <i
                  className="fas fa-caret-down"
                />
                 Welcome, 
                Frodo
                !
              </h2>
              <Link
                className="logout-link"
                onClick={[Function]}
                replace={false}
                to="/"
              >
                <h2>
                  Log Out
                </h2>
              </Link>
            </div>,
            <i
              className="fas fa-user-circle"
            />,
          ],
          "className": "current-user",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2>
                  <i
                    className="fas fa-caret-down"
                  />
                   Welcome, 
                  Frodo
                  !
                </h2>,
                <Link
                  className="logout-link"
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  <h2>
                    Log Out
                  </h2>
                </Link>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <i
                      className="fas fa-caret-down"
                    />,
                    " Welcome, ",
                    "Frodo",
                    "!",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fas fa-caret-down",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  " Welcome, ",
                  "Frodo",
                  "!",
                ],
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <h2>
                    Log Out
                  </h2>,
                  "className": "logout-link",
                  "onClick": [Function],
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Log Out",
                  },
                  "ref": null,
                  "rendered": "Log Out",
                  "type": "h2",
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fas fa-user-circle",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NavLink
            activeClassName="active"
            aria-current="page"
            to="/"
          >
            <div
              className="logo"
            />
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item"
            to="/training"
          >
             TRAINING 
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item"
            to="/projects"
          >
             PROJECTS 
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item"
            to="/ascents"
          >
             ASCENTS 
          </NavLink>,
          <div
            className="current-user"
          >
            <div>
              <h2>
                <i
                  className="fas fa-caret-down"
                />
                 Welcome, 
                Frodo
                !
              </h2>
              <Link
                className="logout-link"
                onClick={[Function]}
                replace={false}
                to="/"
              >
                <h2>
                  Log Out
                </h2>
              </Link>
            </div>
            <i
              className="fas fa-user-circle"
            />
          </div>,
        ],
        "className": "header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": <div
              className="logo"
            />,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "logo",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": " TRAINING ",
            "className": "nav-item",
            "to": "/training",
          },
          "ref": null,
          "rendered": " TRAINING ",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": " PROJECTS ",
            "className": "nav-item",
            "to": "/projects",
          },
          "ref": null,
          "rendered": " PROJECTS ",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": " ASCENTS ",
            "className": "nav-item",
            "to": "/ascents",
          },
          "ref": null,
          "rendered": " ASCENTS ",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                <h2>
                  <i
                    className="fas fa-caret-down"
                  />
                   Welcome, 
                  Frodo
                  !
                </h2>
                <Link
                  className="logout-link"
                  onClick={[Function]}
                  replace={false}
                  to="/"
                >
                  <h2>
                    Log Out
                  </h2>
                </Link>
              </div>,
              <i
                className="fas fa-user-circle"
              />,
            ],
            "className": "current-user",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2>
                    <i
                      className="fas fa-caret-down"
                    />
                     Welcome, 
                    Frodo
                    !
                  </h2>,
                  <Link
                    className="logout-link"
                    onClick={[Function]}
                    replace={false}
                    to="/"
                  >
                    <h2>
                      Log Out
                    </h2>
                  </Link>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <i
                        className="fas fa-caret-down"
                      />,
                      " Welcome, ",
                      "Frodo",
                      "!",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "fas fa-caret-down",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "i",
                    },
                    " Welcome, ",
                    "Frodo",
                    "!",
                  ],
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h2>
                      Log Out
                    </h2>,
                    "className": "logout-link",
                    "onClick": [Function],
                    "replace": false,
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Log Out",
                    },
                    "ref": null,
                    "rendered": "Log Out",
                    "type": "h2",
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fas fa-user-circle",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Header Header Component should match the snapshot with no user 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    currentUser={
      Object {
        "email": "",
        "name": "",
        "password": "",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <NavLink
          activeClassName="active"
          aria-current="page"
          to="/"
        >
          <div
            className="logo"
          />
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item"
          to="/training"
        >
           TRAINING 
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item"
          to="/projects"
        >
           PROJECTS 
        </NavLink>,
        <NavLink
          activeClassName="active"
          aria-current="page"
          className="nav-item"
          to="/ascents"
        >
           ASCENTS 
        </NavLink>,
        <Link
          replace={false}
          to="/login"
        >
          <button>
            Login / Sign Up
          </button>
        </Link>,
      ],
      "className": "header",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": <div
            className="logo"
          />,
          "to": "/",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "logo",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": " TRAINING ",
          "className": "nav-item",
          "to": "/training",
        },
        "ref": null,
        "rendered": " TRAINING ",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": " PROJECTS ",
          "className": "nav-item",
          "to": "/projects",
        },
        "ref": null,
        "rendered": " PROJECTS ",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "aria-current": "page",
          "children": " ASCENTS ",
          "className": "nav-item",
          "to": "/ascents",
        },
        "ref": null,
        "rendered": " ASCENTS ",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button>
            Login / Sign Up
          </button>,
          "replace": false,
          "to": "/login",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Login / Sign Up",
          },
          "ref": null,
          "rendered": "Login / Sign Up",
          "type": "button",
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NavLink
            activeClassName="active"
            aria-current="page"
            to="/"
          >
            <div
              className="logo"
            />
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item"
            to="/training"
          >
             TRAINING 
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item"
            to="/projects"
          >
             PROJECTS 
          </NavLink>,
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="nav-item"
            to="/ascents"
          >
             ASCENTS 
          </NavLink>,
          <Link
            replace={false}
            to="/login"
          >
            <button>
              Login / Sign Up
            </button>
          </Link>,
        ],
        "className": "header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": <div
              className="logo"
            />,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "logo",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": " TRAINING ",
            "className": "nav-item",
            "to": "/training",
          },
          "ref": null,
          "rendered": " TRAINING ",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": " PROJECTS ",
            "className": "nav-item",
            "to": "/projects",
          },
          "ref": null,
          "rendered": " PROJECTS ",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "aria-current": "page",
            "children": " ASCENTS ",
            "className": "nav-item",
            "to": "/ascents",
          },
          "ref": null,
          "rendered": " ASCENTS ",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button>
              Login / Sign Up
            </button>,
            "replace": false,
            "to": "/login",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login / Sign Up",
            },
            "ref": null,
            "rendered": "Login / Sign Up",
            "type": "button",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
